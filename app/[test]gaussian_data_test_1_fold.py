# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
# TEST
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
# (c) 2017 PJS, University of Sheffield, iamlxb3@gmail.com
# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


# ==========================================================================================================
# general package import
# ==========================================================================================================
import sys
import os
# ==========================================================================================================

# ==========================================================================================================
# ADD SYS PATH
# ==========================================================================================================
parent_folder = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
mlp_path = os.path.join(parent_folder, 'classifiers','mlp')
path2 = os.path.join(parent_folder, 'general_functions')
sys.path.append(mlp_path)
# ==========================================================================================================

# ==========================================================================================================
# local package import
# ==========================================================================================================
from mlp_classifier import MlpClassifier_P
# ==========================================================================================================

# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
# IMPORT IMPORT IMPORT IMPORT IMPORT IMPORT IMPORT IMPORT IMPORT IMPORT IMPORT IMPORT IMPORT IMPORT IMPORT I
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

# ----------------------------------------------------------------------------------------------------------------------
# (1.) build classifer and read data
# ----------------------------------------------------------------------------------------------------------------------
mlp_general_clf = MlpClassifier_P()
data_folder = os.path.join('test','gaussian_data')
data_folder = os.path.join(parent_folder, 'data', data_folder)
# ----------------------------------------------------------------------------------------------------------------------


# ----------------------------------------------------------------------------------------------------------------------
# (2.) config the other parameters
# ----------------------------------------------------------------------------------------------------------------------

# (b.) clf_path
clsfy_name = 'gaussain_test'
clsfy_path = os.path.join(parent_folder, 'trained_classifiers', clsfy_name)
# ----------------------------------------------------------------------------------------------------------------------


# ----------------------------------------------------------------------------------------------------------------------
# (3.) input
# ----------------------------------------------------------------------------------------------------------------------
dev_per=0.1
data_per=1.0
tol = 1e-6
learning_rate_init = 0.001
hidden_layer_sizes = (33,3)
# ----------------------------------------------------------------------------------------------------------------------


# ----------------------------------------------------------------------------------------------------------------------
# (4.) topology and feature selection test
# ----------------------------------------------------------------------------------------------------------------------
mlp_general_clf.set_mlp_clf(hidden_layer_sizes, tol=tol, learning_rate_init=learning_rate_init)
mlp_general_clf.general_feed_and_separate_data_1_fold(data_folder, dev_per=dev_per, data_per=data_per,
                                                      feature_switch_tuple=None,
                                                      mode='clf',is_standardisation = True,
                                                      is_PCA = True)

mlp_general_clf.clf_train(save_clsfy_path=clsfy_path)
mlp_general_clf.clf_dev(save_clsfy_path=clsfy_path)
# ----------------------------------------------------------------------------------------------------------------------
